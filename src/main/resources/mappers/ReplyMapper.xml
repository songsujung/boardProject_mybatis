<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.boardsj.mappers.ReplyMapper">

    <!--  목록  -->
    <select id="getList" resultType="com.example.boardsj.dto.ReplyDTO">
    select if(rno = gno, 0, 1) as step, rno, bno, reply, replyer,
        replyDate, gno
    from tbl_reply
    where bno = #{bno} and rno > 0
    order by rno asc, gno asc
    limit #{pr.skip}, #{pr.size}
    </select>

    <!--  total  -->
    <select id="getBnoCount" resultType="int">
        select count(rno) from tbl_reply where bno = #{bno}
    </select>

    <!--  댓글 등록  -->
    <insert id="registerReply">
        insert into  tbl_reply (bno, reply, replyer)
        values (#{bno}, #{reply}, #{replyer})
        <!-- 마지막 rno -->
        <selectKey resultType="int" keyProperty="rno" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <!-- 댓글 등록 gno에 rno대입 -->
    <update id="updateReplyGno">
        update tbl_reply set gno = #{rno} where rno = #{rno}
    </update>

    <!--  대댓글 등록  -->
    <insert id="registerReplyChild">
        insert into tbl_reply (bno, reply, replyer, gno)
        values (#{bno}, #{reply}, #{replyer}, #{gno})
        <!-- 마지막 rno -->
        <selectKey resultType="int" keyProperty="rno" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <!--  댓글 조회  -->
    <select id="readOne">
        select rno, bno, reply, replyer, status
        from tbl_reply
        where rno = #{rno}
    </select>

    <!--  댓글 삭제  -->
    <update id="delete">
        update tbl_reply
        set
        reply = '삭제된 댓글입니다.', replyDate = now(), status = false
        where rno = #{rno}
    </update>

    <!--  댓글 수정  -->
    <update id="modify">
        update tbl_reply
        set
        reply = #{reply}, replyDate = now()
        where rno = #{rno}
    </update>

</mapper>